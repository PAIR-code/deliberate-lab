rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Experiment templates (experimenter only)
    match /experimentTemplates/{templateId} {
      allow list: if request.auth.token.role == 'experimenter';
      allow get: if request.auth.token.role == 'experimenter' && (get(/experimentTemplates/{templateId}).data.permissions.visibility == "public" || request.auth.uid == get(/experimentTemplates/{templateId}).data.metadata.creator || request.auth.uid in get(/experimentTemplates/{templateId}).data.permissions.readers);

      // Experiments can use `writeExperiment`, `deleteExperiment` endpoints
      allow write: if false;
    }

    // Agent templates (experimenter only)
    match /agentTemplates/{agentId} {
      allow list: if request.auth.token.role == 'experimenter';
      allow get: if request.auth.token.role == 'experimenter' && (get(/agentTemplates/{agentId}).data.permissions.visibility == "public" || request.auth.uid == get(/agentTemplates/{agentId}).data.metadata.creator || request.auth.uid in get(/agentTemplates/{agentId}).data.permissions.readers);
      allow write: if request.auth.uid == get(/agentTemplates/{agentId}).data.metadata.creator;
    }

    // Experimenter data (experimenter with matching ID only)
    match /experimenterData/{experimenterId} {
      allow list: if false;
      allow get: if experimenterId == request.auth.uid;
      allow write: if experimenterId == request.auth.uid;
    }

    // Experimenter profiles (experimenter only)
    match /experimenters/{experimenterId} {
      allow read: if true;
      allow write: if experimenterId == request.auth.uid;
    }

    // Experiments
    match /experiments/{experimentId} {
      allow get: if true;
      allow list: if request.auth.token.role == 'experimenter';

      // Experimenters can use `writeExperiment`, `deleteExperiment` endpoints
      allow write: if false;

      match /stages/{stageId} {
        allow read: if true; // Public read
        // Experimenters can use `writeExperiment`, `deleteExperiment`
        allow write: if false;
      }

      match /roles/{roleId} {
        allow read: if true; // Public read
        allow write: if request.auth.token.role == 'experimenter';
      }

      match/cohorts/{cohortId} {
        allow get: if true; // Public read
        allow list: if request.auth.token.role == 'experimenter'; // && (get(/experiments/{experimentId}).data.permissions.visibility == "public" || request.auth.uid == get(/experiments/{experimentId}).data.metadata.creator || request.auth.uid in get(/experiments/{experimentId}).data.permissions.readers);

        // TODO: Experimenters can use cloud function endpoints
        allow write: if false;

        match /publicStageData/{stageId} {
          allow read: if true;

          // TODO: Triggered by cloud function triggers
          allow write: if false;
        }
      }

      match /participants/{participantPrivateId} {
        allow list: if request.auth.token.role == 'experimenter'; // && (get(/experiments/{experimentId}).data.permissions.visibility == "public" || request.auth.uid == get(/experiments/{experimentId}).data.metadata.creator || request.auth.uid in get(/experiments/{experimentId}).data.permissions.readers);
        allow get: if true; // Public read

        // TODO: Participants can use cloud function endpoints
        allow update: if false;

        match /stageData/{stageId} {
          allow read: if true;

          // TODO: Participants can use cloud function endpoints
          allow write: if false;
        }
      }

      match /participantPublicData/{participantPublicId} {
        allow list: if false;
        allow get: if true;

        // TODO: Triggered by cloud function triggers
        allow write: if false;
      }
    }
  }
}
