rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Experiment templates (experimenter only)
    match /experimentTemplates/{templateId} {
      allow list: if request.auth.token.role == 'experimenter';
      allow get: if request.auth.token.role == 'experimenter' && (get(/groupTemplates/{templateId}).data.permissions.visibility == "public" || request.auth.uid in get(/experimentTemplates/{templateId}).data.permissions.readers);
      allow write: if false; // Complex validation through cloud functions 
    }

    // Agent templates (experimenter only)
    match /agentTemplates/{agentId} {
      allow list: if request.auth.token.role == 'experimenter';
      allow get: if request.auth.token.role == 'experimenter' && (get(/agentTemplates/{templateId}).data.permissions.visibility == "public" || request.auth.uid in get(/agentTemplates/{templateId}).data.permissions.readers);
      allow write: if request.auth.uid == get(/agentTemplates/{agentId}).data.metadata.creator;
    }

    // Experimenter data (experimenter with matching ID only)
    match /experimenterData/{experimenterId} {
      allow list: if false;
      allow get: if experimenterId == request.auth.uid;
      allow write: if experimenterId == request.auth.uid;
    }

    // Experimenter profiles (experimenter only)
    match /experimenters/{experimenterId} {
      allow read: true;
      allow write: if experimenterId == request.auth.uid;
    }

    // Experiments
    match /experiments/{experimentId} {
      allow get: if true;
      allow list: if request.auth.token.role == 'experimenter';
      allow write: if false; // Complex validation through cloud functions

      match /stages/{stageId} {
        allow read: if true; // Public read
        allow write: if false; // Editors can write through cloud functions
      }

      match /roles/{roleId} {
        allow read: if true; // Public read
        allow write: if false; // Editors can write through cloud functions
      }

      match/cohorts/{cohortId} {
        allow get: if true; // Public read
        allow list: if request.auth.token.role == 'experimenter' && (get(/experiments/{experimentId}).data.permissions.visibility == "public" || request.auth.uid in get(/experiments/{experimentId}).data.permissions.readers);
        allow write: if false; // Editors can write through cloud functions

        match /publicStageData/{stageId} {
          allow read: if true;
          allow write: if false; // Computed through firestore triggers
        }
      }

      match /participants/{participantPrivateId} {
        allow list: if request.auth.token.role == 'experimenter' && (get(/experiments/{experimentId}).data.permissions.visibility == "public" || request.auth.uid in get(/experiments/{experimentId}).data.permissions.readers);
        allow get: if true; // Public read
        allow update: if true;

        match /stageData/{stageId} {
          allow read: if true;
          allow write: if false; // Can write through cloud functions
        }
      }

      match /participantPublicData/{participantPublicId} {
        allow list: if false;
        allow get: if true;
        allow write: if false; // Computed through firestore triggers
      }
    }
  }
}
